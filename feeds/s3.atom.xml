<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>programming notes - S3</title><link href="https://szuckerman.github.io/" rel="alternate"></link><link href="https://szuckerman.github.io/feeds/s3.atom.xml" rel="self"></link><id>https://szuckerman.github.io/</id><updated>2018-10-30T15:30:00-04:00</updated><entry><title>Directly uploading a Pandas DataFrame to S3</title><link href="https://szuckerman.github.io/direct_upload_to_s3.html" rel="alternate"></link><published>2018-10-30T15:30:00-04:00</published><updated>2018-10-30T15:30:00-04:00</updated><author><name>Sam Zuckerman</name></author><id>tag:szuckerman.github.io,2018-10-30:/direct_upload_to_s3.html</id><summary type="html">&lt;p&gt;Here's some basic code on how to upload to S3 directly from a Pandas object.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I published a post on &lt;a href="https://szuckerman.github.io/get_data_into_redshift.html"&gt;easily uploading data to S3 and loading into Redshift&lt;/a&gt;. That post was mainly focused on saving the data as a local file and uploading to S3 using either boto3 or the AWS CLI to move the file to S3.&lt;/p&gt;
&lt;p&gt;However, even though the above works, I had a situation recently where I wanted to upload the files to S3 without storing any temporary files locally.&lt;/p&gt;
&lt;p&gt;I saw a &lt;a href="https://stackoverflow.com/a/40615630"&gt;great stackoverflow answer&lt;/a&gt; that discusses how to use boto3 to upload the bytes from a DataFrame to S3.&lt;/p&gt;
&lt;p&gt;Here's the answer from the post:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;io&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;boto3&lt;/span&gt;

&lt;span class="n"&gt;csv_buffer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;StringIO&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;csv_buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s3_resource&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;boto3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s3_resource&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bucket&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;df.csv&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;put&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Body&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;csv_buffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getvalue&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The main point to realize here is that instead of the file being sent as a 'file' it's getting sent as bytes directly over the internet.&lt;/p&gt;
&lt;p&gt;This is a good, quick solution, however, if you have a super-gigantic file, it might still be better to go the 'temporary file' route, since this has to store the object in memory to send it.&lt;/p&gt;
&lt;p&gt;The main idea that's important about this method, though, is that once you're familiar with using the methods from the &lt;a href="https://docs.python.org/3/library/io.html"&gt;&lt;code&gt;io&lt;/code&gt; package&lt;/a&gt; (i.e. &lt;code&gt;StringIO()&lt;/code&gt; and &lt;code&gt;BytesIO()&lt;/code&gt;), there's a ton you can do online.&lt;/p&gt;
&lt;p&gt;For example, using &lt;code&gt;BytesIO()&lt;/code&gt; you can download and work with images using &lt;code&gt;PIL&lt;/code&gt;, using &lt;code&gt;StreamIO()&lt;/code&gt; you can work with huge text files that won't fit in memory; there's many cool uses that will take your Python programming to the next level. &lt;/p&gt;
&lt;p&gt;But those are the topics for other posts :). This is merely an introduction to one example using the &lt;code&gt;io&lt;/code&gt; module.&lt;/p&gt;</content><category term="S3"></category><category term="python"></category><category term="pandas"></category><category term="s3"></category><category term="code snippet"></category></entry></feed>